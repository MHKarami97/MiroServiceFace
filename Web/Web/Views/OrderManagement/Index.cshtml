@model List<Web.ViewModels.OrderViewModel>
@using Microsoft.Extensions.Options
@inject IOptions<Setting> settings
@{
    ViewData["Title"] = "Orders List";
}
<h3>Orders Management - overview</h3>
<table class="table">
    <thead>
    <tr>
        <th>Order Id</th>
        <th>User Email</th>
        <th>Image</th>
        <th>Status</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var order in Model)
    {
        <tr class="clickable"
            onclick="location.href='@Url.Action("Details", "OrderManagement", new {orderId = order.OrderId})'">
            <td>@order.OrderId</td>
            <td>@order.UserEmail</td>
            <td>
                <img src="@order.ImageString" width="50px" height="50px" alt="image"/>
            </td>
            <td>@order.Status</td>


        </tr>
    }
    </tbody>


</table>

@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script type="text/javascript">
             let timerId;
             const connection = new signalR.HubConnectionBuilder()
                 .withUrl('@settings.Value.SignalRHubUrl/orderhub')
                 .configureLogging(signalR.LogLevel.Debug)
                 .withAutomaticReconnect()
                 .build();
    
             connection.on('UpdateOrders', (message, orderId) => {
    
                 //const encodedMsg = message + ":" + orderId;
                 
                 if (orderId && orderId.length) {
                     toastr.success(orderId + ' Updated to status' + message);
                     refreshPage();
                 }
             });
    
             function refreshPage() {
                 clearTimeout(timerId);
                 timerId = setTimeout(function () {
                     window.location.reload();
                 }, 1000)
             }
    
             connection.start()
             .catch(err =>
                console.error(err.toString())
             );
    </script>
}